

当对全局资源存在写操作时，如果不能保证写入过程的原子性，会出现脏读脏写的情况，即线程不安全。
Python的GIL只能保证原子操作的线程安全，因此在多线程编程时我们需要通过加锁来保证线程安全。



最简单的锁是互斥锁（同步锁），互斥锁是用来解决io密集型场景产生的计算错误，
即目的是为了保护共享的数据，同一时间只能有一个线程来修改共享的数据。

